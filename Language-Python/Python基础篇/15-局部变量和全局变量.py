# -*- coding: utf-8 -*-
from __future__ import print_function
from __future__ import unicode_literals
# 局部变量
# 局部变量，就是在函数内部定义的变量
# 不同的函数，可以定义相同的名字的局部变量，但是各用个的不会产生影响
# 局部变量的作用，为了临时保存数据需要在函数中定义变量来进行存储，这就是它的作用
def d():
    a = 100 #局部变量
    print(a)
d()

# 全局变量：如果一个变量，既能在一个函数中使用，也能在其他的函数中使用，这样的变量就是全局变量
# 定义全局变量
c = 100
def test1():
    print(c)
# 调用函数
test1()

# 修改全局变量
y = 1000
def test100():
    print("修改前--->" % y)
    global y
    y = 2000
    print("修改后--->"%y)

def test101():
    print("--->"%y)

# 调用函数
test100()
test101()

# 总结：
# 在函数外边定义的变量叫做全局变量
# 全局变量能够在所有的函数中进行访问
# 如果在函数中修改全局变量，那么就需要使用global进行声明，否则出错
# 如果全局变量的名字和局部变量的名字相同，那么使用的是局部变量的，小技巧强龙不压地头蛇

# 在函数中不使用global声明全局变量时不能修改全局变量的本质是不能修改全局变量的指向，即不能将全局变量指向新的数据。
# 对于不可变类型的全局变量来说，因其指向的数据不能修改，所以不使用global时无法修改全局变量。
# 对于可变类型的全局变量来说，因其指向的数据可以修改，所以不使用global时也可修改全局变量。